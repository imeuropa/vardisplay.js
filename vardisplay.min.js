let vardisplay={debug:!1,enableDebug:()=>(vardisplay.debug=!0,"OK"),log:a=>console.log(`%c[VARDISPLAY / DEBUG]%c${a}`,"color:yellow;background:black;padding:4px;","color:white;background:black;padding:4px;"),run:()=>{const html=document.getElementsByTagName("html")[0],match=html.innerHTML.match(/({{(.*?)}})/g);for(let c=0;c<match.length;c++){const matchedString=match[c],xssmatch=matchedString.match(/([\<\>\=\;\$\(\)\,\/])/g);if(vardisplay.debug&&(vardisplay.log(`Matched string: ${matchedString}`),vardisplay.log(`Matched XSS: ${xssmatch}`)),!xssmatch){const escapedMatch=matchedString.replace(/([{}<>\/\\\\=;$(),]*)/g,""),keyValue=eval(escapedMatch);vardisplay.debug&&(vardisplay.log(`Escaped match: ${escapedMatch}`),vardisplay.log(`Key value: ${keyValue}`)),html.innerHTML=html.innerHTML.replace(matchedString,keyValue)}}return"OK"}};vardisplay.run();